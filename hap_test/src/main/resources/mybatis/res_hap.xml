<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="spring.model.mapper.ResMapper">

	<delete id="delete" parameterType="int">
		delete from res_hap
		where
		res_num = #{res_num}
	</delete>


	<insert id="create" parameterType="Res_hapDTO">
		insert into res_hap(res_num,
		res_rannum, res_name, res_phone, res_content,
		res_res1, res_res2,
		res_people, room_num, board_num, member_id)
		values((SELECT
		NVL(MAX(res_num), 0) + 1 as res_num FROM res_hap),
		#{res_rannum},#{res_name},#{res_phone}, #{res_content},
		#{res_res1},#{res_res2}, #{res_people}, #{room_num},
		#{board_num}, #{member_id})
	</insert>
	
	<update id="update" parameterType="Res_hapDTO">
		update res_hap
		set
		res_name = #{res_name},
		res_phone = #{res_phone},
		res_content = #{res_content},
		res_res1= #{res_res1},
		res_res2= #{res_res2},
		res_acc = #{res_acc}
		where
		res_num = #{res_num}
	</update>
	
	<update id="create_acc" parameterType="Res_hapDTO">
		update res_hap
		set
		res_acc = #{res_acc}
		where
		res_num = #{res_num}
	</update>
	
	<update id="delete_acc" parameterType="Res_hapDTO">
		update res_hap
		set
		res_acc = 'D'
		where
		res_num = #{res_num}
	</update>
	
	<select id="list_m" parameterType="String" resultType="Res_hapDTO">
		select member_grade, member_id, member_name, member_phone, member_email
		from member_hap
		where member_id = #{member_id}
	</select>
	
	<select id="read" parameterType="String" resultType="Res_hapDTO">
		select res_num,
		res_rannum, res_name, res_phone, res_content, res_people,
		to_char(res_res1,'yyyy-mm-dd')res_res1,
		to_char(res_res2,'yyyy-mm-dd')res_res2, res_acc,
		room_num, board_num, member_id
		from res_hap
		where res_num = #{res_num}
	</select>
	
	<select id="read_id" parameterType="Map" resultType="Res_hapDTO">
		select res_rannum, to_char(res_res1,'yyyy-mm-dd')res_res1, board_num
		from res_hap
		where member_id = #{member_id}
	</select>

	<select id="total" resultType="int" parameterType="Map">
		select
		count(*) from res_hap
		<where>
			<choose>
				<when test="col=='res_name'">
					res_name like '%'||#{word}||'%'
				</when>
				<when test="col=='res_acc'">
					res_acc like '%'||#{word}||'%'
				</when>
			</choose>
		</where>
	</select>

	<select id="list" parameterType="Map" resultType="Res_hapDTO">
		SELECT res_num, res_name, res_rannum, res_people, to_char(res_res1,'yyyy-mm-dd') res_res1, to_char(res_res2,'yyyy-mm-dd') res_res2, res_acc, member_id, r 
		FROM( 
		    SELECT res_num, res_name, res_rannum, res_people, res_res1, res_res2, res_acc, member_id, rownum r 
		    FROM ( 
		        SELECT res_num, res_name, res_rannum, res_people, res_res1, res_res2, res_acc, member_id
		        FROM res_hap 
		<where>
			<choose>
				<when test="col=='res_name'">
					res_name like '%'||#{word}||'%'
				</when>
				<when test="col=='res_acc'">
					res_acc like '%'||#{word}||'%'
				</when>
			</choose>
		</where>
		ORDER
		BY res_num desc
		)
		) 
		 <![CDATA[
		 where r >= #{sno} and r<= #{eno} 
		 ]]>
	</select>
	
	<select id="total_acc" resultType="int" parameterType="Map">
		select
		count(*) from res_hap
		<where>
			<choose>
				<when test="col=='res_acc'">
					res_acc like '%'||#{word}||'%'
				</when>
				<when test="col=='res_name'">
					res_name like '%'||#{word}||'%'
				</when>
				<when test="col=='res_res1'">
					res_res1 like '%'||#{word}||'%'
				</when>
			</choose>
		</where>
	</select>

	<select id="list_acc" parameterType="Map" resultType="Res_hapDTO">
		SELECT res_num, res_name, res_rannum, res_people, to_char(res_res1,'yyyy-mm-dd') res_res1, to_char(res_res2,'yyyy-mm-dd') res_res2, res_acc, member_id, r 
		FROM( 
		    SELECT res_num, res_name, res_rannum, res_people, res_res1, res_res2, res_acc, member_id, rownum r 
		    FROM ( 
		        SELECT res_num, res_name, res_rannum, res_people, res_res1, res_res2, res_acc, member_id
		        FROM res_hap 
		<where>
			<choose>
				<when test="col=='res_acc'">
					res_acc like '%'||#{word}||'%'
				</when>
				<when test="col=='res_name'">
					res_name like '%'||#{word}||'%'
				</when>
				<when test="col=='res_res1'">
					res_res1 like '%'||#{word}||'%'
				</when>
			</choose>
		</where>
		ORDER
		BY res_num desc
		)
		) 
		 <![CDATA[
		 where r >= #{sno} and r<= #{eno} 
		 ]]>
	</select>
	
	<select id = "room_hap" parameterType="int" resultType="Res_hapDTO">
	select room_num, room_max, room_name, room_content,
	room_filename, room_price from room_hap
	where board_num = #{board_num}
	</select>
	
 	<select id = "board_hap" parameterType="int" resultType="Res_hapDTO">
	select board_account, board_name, board_address1, board_address2
	from board_hap where board_num = #{board_num}
	</select>
 
	
 	<select id = "room_r_hap" parameterType="int" resultType="Res_hapDTO">
	select room_num, room_max, room_name, room_content,
	room_filename, room_price from room_hap where room_num = #{room_num} 
	</select>
	
	<select id = "member_hap" parameterType="String" resultType="Res_hapDTO">
	select member_id, member_name, member_email, member_phone
	from member_hap where member_id = #{member_id}
	</select>
	
	<select id = "res_find" parameterType="int" resultType="Res_hapDTO">
	select res_num,
		res_rannum, res_name, res_phone, res_content, res_people, res_acc,
		to_char(res_res1,'yyyy-mm-dd')res_res1,
		to_char(res_res2,'yyyy-mm-dd')res_res2,
		room_num, board_num, member_id
		from res_hap
		where res_rannum =  #{res_rannum}
	</select>
</mapper>